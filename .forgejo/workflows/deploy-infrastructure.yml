on:
  workflow_dispatch:
    inputs:
      services:
              description: "Select services to deploy"
              required: true
              type: choice
              options:
                - timescaledb
                - rabbitmq
                - pgadmin
                - all

jobs:
  depoly:
    name: "Deploy infrastructures"
    runs-on: [deployer]
    env:
      DEPLOY_BASE: /home/deployer/deploy/${{ github.repository }}

    steps:

    # 1. Generate temp dir path
    - name: Generate deploy directory name
      id: path
      run: |
        TS=$(date +%s)
        RAND_ID=${TS}-${RANDOM}
        echo "dir=$DEPLOY_BASE/$RAND_ID" >> $GITHUB_OUTPUT
        echo "Temp deploy folder path: $DEPLOY_BASE/$RAND_ID"

    # 2. Create temp folder
    - name: Create deploy folder
      run: |
        mkdir -p ${{ steps.path.outputs.dir }}
        echo "Temp deploy folder created"

    # 3. Checkout only deploy folder
    - name: "Checkout deployment file only"
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          deploy
        sparse-checkout-cone-mode: false
    
    # 4. Run docker compose based on input
    - name: Deploy selected service(s)
      run: |
        cp ./deploy ${{ steps.path.outputs.dir }}
        cd ${{ steps.path.outputs.dir }}

        case "${{ github.event.inputs.services }}" in
          timescaledb)
            docker compose --project-name ${{github.repository}} up -d db
            ;;
          rabbitmq)
            docker compose --project-name ${{github.repository}} up -d broker
            ;;
          pgadmin)
            docker compose --project-name ${{github.repository}} up -d pgadmin
            ;;
          all)
            docker compose --project-name ${{github.repository}} up -d db broker pgadmin
            ;;
        esac
  
